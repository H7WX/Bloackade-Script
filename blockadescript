local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local toiletNames = {
-- A
"Acid Arm Helicopter",
"Agent Mutant",
"Air Dropper",
"Armored Helicopter",
"Armored Laser Toilet",
"Armored Snow Toilet",
"Armored Soiler Rocket Toilet",
"Astro Assassin Toilet",
"Astro Detainer",
"Astro Entrapper",
"Astro Helicopter",
"Astro Rocketeer",
"Astro Rocketeer V2",
"Attack Helicopter",
"Attack Strider Laser",
"Axe Soldier Mutant",
-- B
"Big Acid Bomber",
"Big Gs Toilet",
"Big Gun Toilet",
"Big Magnet Helicopter",
"Big Police Toilet",
"Big ST Toilet",
"Big Strider Toilet",
"Bomber Toilet",
"Buff Mutant",

-- C
"Camo Toilet",
"Cargo Cleaner Toilet",
"Catapult Snow Toilet",
"Christmas Wraith",
"Creep Toilet",

-- D
"DJ Toilet",
"DJ Toile",
"Dual Blade Toilet",
"Dual Buzzsaw Toilet",

-- E
"Explosive Jumper",
"Explosive Plane Toilet",

-- F
"Failure Mutant",
"Fast Failure Mutant",
"Flashlight Toilet",
"Flying Toilet",
"Flamethrower Toilet",
"Frontline Guard Toilet",

-- G
"G Toilet",
"G Toilet 2.0",
"G Toilet 2.0 (Glass and Eye)",
"G Toilet 3.0",
"G Toilet Decoy",
"Giant GS Toilet",
"Giant Magnet",
"Giant Robber",
"Giant ST Toilet",
"Giant Sweeper Toilet",
"Gman Rocket Clone",
"Gs Helicopter",
"Gs Jetpack Toilet",
"Gs ST Toilet",
"Gun Big Strider Toilet",
"Gun Helicopter Clone",

-- H
"Heavy Soldier Toilet V1",
"Heavy Soldier Toilet V2",
"Hexa Rocket",
"Helicopter",
"Horde Toilet",
"Huge Acid Bomber",
"Huge GS Toilet",
"Huge ST Toilet",

-- I
"Infected Big Camera Man",
"Infected Camera Man",
"Infected Large Speaker Man",
"Infected Speaker Man",
"Infected Titan Speaker",
"Infected Upgraded Titan Camera Man",
"Infected Upgraded Titan Speaker",

-- J
"Jetpack Creep Toilet",
"Jetpack Toilet",
"Jolly Berserker",
"Jumper Mutant",

-- K
"Kamikaze Crawler Toilet",

-- L
"L Bomber",
"Large GS Toilet",
"Large Jumper",
"Large Mutant",
"Large ST Toilet",
"Laser Clone",
"Laser Soldier Toilet",
"Leg Toilet",
"Loud Speaker Toilet",

-- M
"Mafia Toilet",
"Magnet Helicopter",
"Michael Jackson",
"Militant Toilet",
"Military Toilet",
"Mini Bomber Toilet",
"Mutant Old",

-- N
"Normal Gun Toilet",

-- O
"Octa Rocket",

-- P
"Police Toilet",
"Quad Laser Toilet",
"Quad Rocket",
"Quad Saw Toilet",

-- R
"Rocket Bathtub Toilet",
"Rocket Giant Robber",
"Rocket Heli",
"Rocket Heli 2",
"Rocket Helicopter",
"Rocket Strider Toilet",
"Rocket Toilet",

-- S
"S Bomber",
"Saint Toilet",
"Saw Gman Clone",
"Saw Mutant",
"Saw Soldier Car Mutant",
"Scavenger Toilet",
"Scientist Toilet",
"Shooter Snow Toilet",
"Skibidi Toilet",
"Skull Toilet",
"Small Gun Toilet",
"Snow Burner",
"Snow Explosive Jumper",
"Snow Large Jumper",
"Snow Soldier Rocket Toilet",
"Snow Toilet Big V1",
"Snow Toilet Big V2",
"Snow Toilet Huge V1",
"Snow Toilet Huge V2",
"Snow Toilet Normal V1",
"Snow Toilet Normal V2",
"Snow Toilet Normal V3",
"Solder Rocket Toilet",
"Speaker Snow",
"Strider Laser",
"Strider Penta Laser",
"Strider Rocket Laser",

-- T
"Tentacle Arm",
"Transmitter Toilet",
"Triplets Toilet",
"Twinkle Little Crawler",

-- V
"Vacuum Toilet",

-- W
"Warhead Toilet",

-- Z
"Zastro VITV",
"Zombie Big ST toilet",
"Zombie Big Strider Toilet",
"Zombie Camera man",
"Zombie Dual Buzzsaw toilet",
"Zombie Fast Camera man",
"Zombie Huge ST toilet",
"Zombie Jumper Camera Man",
"Zombie Large ST toilet",
"Zombie Skibidi toilet",
"Zombie Strider Gun",
"Zombie Tentacle Arm",
"Zombie Upgraded Titan Speaker",
"Zombie Vacuum toilet",
"Zombie harpoon police toilet",
"Zombie flying buzzsaw toilet"
}

local Window = Rayfield:CreateWindow({
    Name = "Blockade Hub",
    LoadingTitle = "Cooking Up...",
    LoadingSubtitle = "by D & 7",
    Theme = "Default"
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local userInputService = game:GetService("UserInputService")
local h = character.Humanoid
local camera = workspace.CurrentCamera

local PlayerTap = Window:CreateTab("Player Stats", 0)
local StatSection = PlayerTap:CreateSection("Player things")
local Slider = PlayerTap:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 500},
    Increment = 5,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "",
    Callback = function(Value)
        h.WalkSpeed = Value
    end,
})

local running = false
local Toggle = PlayerTap:CreateToggle({
    Name = "Infinite Health",
    CurrentValue = false,
    Flag = "",
    Callback = function(Value)
        running = Value
        while running do
            if h.Health < 10000 then
                h.Health = 10000
            end
            task.wait(0.1)
        end
    end,
})

local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")

local noclipEnabled = false

local ToggleNoclip = PlayerTap:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "",
    Callback = function(Value)
        noclipEnabled = Value
    end,
})

runService.Stepped:Connect(function()
    local character = localPlayer.Character
    if character then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = not noclipEnabled
            end
        end
    end
end)

local flying = false
local flySpeed = 45
local movers = {}

local FlySpeedSlider = PlayerTap:CreateSlider({
    Name = "Fly Speed",
    Range = {10, 200},
    Increment = 5,
    Suffix = "Speed",
    CurrentValue = 45,
    Flag = "FlySpeed",
    Callback = function(Value)
        flySpeed = Value
    end,
})

local function toggleFly(enable)
    local primaryPart = character.PrimaryPart
    if not primaryPart then return end

    if enable then
        if not movers[1] then
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.one * 9e9

            local bodyGyro = Instance.new("BodyGyro")
            bodyGyro.MaxTorque = Vector3.one * 9e9
            bodyGyro.P = 9e4

            local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
            bodyAngularVelocity.AngularVelocity = Vector3.yAxis * 9e9
            bodyAngularVelocity.MaxTorque = Vector3.yAxis * 9e9
            bodyAngularVelocity.P = 9e9

            movers = {bodyVelocity, bodyGyro, bodyAngularVelocity}
        end

        flying = true
        runService.Heartbeat:Connect(function()
            if not flying then return end

            local camCFrame = camera.CFrame
            local velocity = Vector3.zero
            local rotation = camCFrame.Rotation

            if userInputService:IsKeyDown(Enum.KeyCode.W) then
                velocity += camCFrame.LookVector
                rotation *= CFrame.Angles(math.rad(-40), 0, 0)
            end
            if userInputService:IsKeyDown(Enum.KeyCode.S) then
                velocity -= camCFrame.LookVector
                rotation *= CFrame.Angles(math.rad(40), 0, 0)
            end
            if userInputService:IsKeyDown(Enum.KeyCode.D) then
                velocity += camCFrame.RightVector
                rotation *= CFrame.Angles(0, 0, math.rad(-40))
            end
            if userInputService:IsKeyDown(Enum.KeyCode.A) then
                velocity -= camCFrame.RightVector
                rotation *= CFrame.Angles(0, 0, math.rad(40))
            end
            if userInputService:IsKeyDown(Enum.KeyCode.E) then
                velocity += Vector3.yAxis
            end
            if userInputService:IsKeyDown(Enum.KeyCode.Q) then
                velocity -= Vector3.yAxis
            end

            local tweenInfo = TweenInfo.new(0.5)
            tweenService:Create(movers[1], tweenInfo, { Velocity = velocity * flySpeed }):Play()
            movers[1].Parent = primaryPart
            tweenService:Create(movers[2], tweenInfo, { CFrame = rotation }):Play()
            movers[2].Parent = primaryPart
        end)
    else
        flying = false
        for _, mover in ipairs(movers) do
            if mover then mover.Parent = nil end
        end
    end
end

local FlyToggle = PlayerTap:CreateToggle({
    Name = "Fly Mode",
    CurrentValue = false,
    Flag = "FlyToggle",
    Callback = function(Value)
        toggleFly(Value)
    end,
})
local AutoFarmTab = Window:CreateTab("Auto Farm", 0)
local AutoFarmSection = AutoFarmTab:CreateSection("Farm Options")

local autoFarmActive = false
local maxDistance = 5000

local function findClosestTarget(maxDist, part)
    local livingFolder = workspace:FindFirstChild("Living")
    if not livingFolder then return nil end

    local lastDist = maxDist
    local closest = nil

    for _, v in pairs(livingFolder:GetChildren()) do
        if table.find(toiletNames, v.Name) and v:FindFirstChild("HumanoidRootPart") then
            local hum = v:FindFirstChild("Humanoid")
            if hum and hum.Health > 0 then
                local thisDist = (v.HumanoidRootPart.Position - part.Position).Magnitude
                if thisDist < lastDist then
                    closest = v
                    lastDist = thisDist
                end
            end
        end
    end
    return closest
end

local function simulateMouseClick()
    userInputService:SendMouseButtonEvent(0, 0, Enum.UserInputState.Begin, false, nil, 0)
    task.wait(0.05)
    userInputService:SendMouseButtonEvent(0, 0, Enum.UserInputState.End, false, nil, 0)
end

local function startAutoFarm()
    spawn(function()
        while autoFarmActive do
            pcall(function()
                local player = game.Players.LocalPlayer
                local char = player.Character or player.CharacterAdded:Wait()
                local hrp = char:FindFirstChild("HumanoidRootPart")
                
                if char and hrp then
                    local target = findClosestTarget(maxDistance, hrp)
                    
                    if target and target:FindFirstChild("HumanoidRootPart") then
                        local targetSize = target:GetExtentsSize().Y
                        local targetPos = target.HumanoidRootPart.Position
                        
                        -- Positioning directly above target based on its size
                        local yOffset = targetSize + 3
        
                                                -- Teleport above NPC and look down
hrp.CFrame = CFrame.new(targetPos + Vector3.new(0, yOffset, 0)) * CFrame.Angles(math.rad(-90), 0, 0)


                        -- Simulate left mouse click
                        simulateMouseClick()
                    end
                end
            end)
            task.wait(0.1)  -- Wait 1/4 second between actions
        end
    end)
end

local AutoFarmToggle = AutoFarmTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Flag = "AutoFarmToggle",
    Callback = function(Value)
        autoFarmActive = Value
        if Value then
            startAutoFarm()
        end
    end
})

local DistanceSlider = AutoFarmTab:CreateSlider({
    Name = "Farm Radius",
    Range = {100, 10000},
    Increment = 100,
    Suffix = "Studs",
    CurrentValue = 5000,
    Flag = "FarmRadius",
    Callback = function(Value)
        maxDistance = Value
    end,
})
